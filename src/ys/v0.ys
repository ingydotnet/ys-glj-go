!YS-v0

=>: !clj |
  (ns ys.v0)

  (defn map-parse [args]
    (mapv #(let [x (read-string %)] (if (number? x) x %)) args))

  (defn say [& _] (apply clojure.core/println _))

  (defn dec+ [& _] (apply clojure.core/dec _))

  (defn eq [& _] (apply clojure.core/= _))

  (defmacro each [bindings & body]
    `(doall (for ~bindings (do ~@body))))

  (defn rng [x y]
    (let [[a b] (for [n [x y]] (if (char? n) (long n) n))]
      (cond
        (and (number? x) (number? y))
        (if (> b a)
          (range a (inc b))
          (range a (dec b) -1))
        (and (char? x) (char? y))
        (if (> b a)
          (map char (range a (inc b)))
          (map char (range a (dec b) -1)))
        :else
        (throw (Exception. (str "Can't rng(" (pr-str x) ", " (pr-str y) ")"))))))

  (defn WWW [& xs]
    (println ">>>")
    (doall
      (for [x xs]
        (println (pr-str  x))))
    (println "<<<")
    (last xs))
